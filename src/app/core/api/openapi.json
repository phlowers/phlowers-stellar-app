{
    "openapi": "3.1.0",
    "info": {
        "title": "celesteBack",
        "summary": "\ncelesteBack is an application generated by the STARTIX tool.\nIt provides APIs for managing users and messages within the application.\n\n- Users API: Manage users, including creating and retrieving.\n- Messages API: Handle messaging functionalities, allowing users to send and receive messages.\n\n# jhipster-needle-api-summary\n",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://0.0.0.0:8080/",
            "description": "Staging environment"
        }
    ],
    "paths": {
        "/api/v1/users/": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Retrieve all users from the DB",
                "description": "Retrieve all users present in the database.\n\nThis function is an HTTP GET endpoint that uses the user service to\nfetch all users and returns them as a list of `UserSchema` models.\nIf no users are found, an HTTP 404 exception is raised.\n\nArgs:\n    user_service (UserService): The injected user service to access the database.\n\nReturns:\n    list[UserSchema]: A list of `UserSchema` objects representing all users.\n\nRaises:\n    HTTPException: If no users are found, a 404 error is raised.",
                "operationId": "get_users_api_v1_users__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/UserSchema"
                                    },
                                    "type": "array",
                                    "title": "Response Get Users Api V1 Users  Get"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create a new user in the DB using an email address",
                "description": "Create a new user in the database with the provided information.\n\nThis function is an HTTP POST endpoint to create a new user in the database\nusing the user service. It takes an email as input and returns\nthe created user as a `UserSchema` model.\n\nArgs:\n    user (UserSchema): The user data to create, including the email address.\n    user_service (UserService): The injected user service to access the database.\n\nReturns:\n    UserSchema: A `UserSchema` object representing the created user, including their generated ID.\n\nRaises:\n    HTTPException: If an error occurs during user creation.",
                "operationId": "create_user_api_v1_users__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/studies/": {
            "post": {
                "tags": [
                    "studies"
                ],
                "summary": "Create a new study",
                "description": "Create a new study.",
                "operationId": "create_study_api_v1_studies__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudySchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudySchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/studies/{study_uuid}": {
            "put": {
                "tags": [
                    "studies"
                ],
                "summary": "Modify a study",
                "description": "Modify a study.",
                "operationId": "modify_study_api_v1_studies__study_uuid__put",
                "parameters": [
                    {
                        "name": "study_uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Study Uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyStudySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudySchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "studies"
                ],
                "summary": "Retrieve a specific study by its UUID from the DB",
                "description": "Get a study by its unique identifier.",
                "operationId": "get_study_by_uuid_api_v1_studies__study_uuid__get",
                "parameters": [
                    {
                        "name": "study_uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Study Uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudySchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "studies"
                ],
                "summary": "Delete a specific study by its UUID from the DB",
                "description": "Delete a specific study by its ID from the DB.",
                "operationId": "delete_study_by_id_api_v1_studies__study_uuid__delete",
                "parameters": [
                    {
                        "name": "study_uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Study Uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer"
                                    },
                                    "title": "Response Delete Study By Id Api V1 Studies  Study Uuid  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/studies/search": {
            "post": {
                "tags": [
                    "studies"
                ],
                "summary": "Search a specific study with its attributes",
                "description": "Search a study with its attributes.",
                "operationId": "search_study_api_v1_studies_search_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchStudySchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/StudySchema"
                                    },
                                    "type": "array",
                                    "title": "Response Search Study Api V1 Studies Search Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Main route of the app",
                "description": "Return a welcome message.\n\nThis function is the main entry point of the application and\nprovides a simple \"Hello, World\" response as a dictionary.",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Root  Get"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "ModifyStudySchema": {
                "properties": {
                    "author_email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Author Email"
                    },
                    "title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "created_at_offline": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At Offline"
                    },
                    "updated_at_offline": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At Offline"
                    }
                },
                "type": "object",
                "title": "ModifyStudySchema",
                "description": "Schema for modifying a study."
            },
            "SearchStudySchema": {
                "properties": {
                    "author_email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Author Email"
                    },
                    "title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "created_after": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created After"
                    },
                    "created_before": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created Before"
                    }
                },
                "type": "object",
                "title": "SearchStudySchema",
                "description": "Schema for searching a study."
            },
            "StudySchema": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Uuid"
                    },
                    "author_email": {
                        "type": "string",
                        "title": "Author Email"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "default": ""
                    },
                    "created_at_offline": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At Offline"
                    },
                    "updated_at_offline": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At Offline"
                    }
                },
                "type": "object",
                "required": [
                    "uuid",
                    "author_email",
                    "title",
                    "created_at_offline",
                    "updated_at_offline"
                ],
                "title": "StudySchema",
                "description": "Schema for creating a new study."
            },
            "UserSchema": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "studies": {
                        "items": {
                            "$ref": "#/components/schemas/StudySchema"
                        },
                        "type": "array",
                        "title": "Studies",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "UserSchema",
                "description": "Data Transfer Object (DTO) for a user.\n\nThis schema represents a user and is used for validation and serialization/deserialization\nof user data during information transfer between application layers (e.g., API, database).\nThe class inherits from `pydantic.BaseModel` to leverage data validation and automatic type conversion.\n\nAttributes:\n    id (UUID | None): The unique identifier of the user. This field is optional and may be `None` in some\n                     cases, such as when creating a new user (before database insertion).\n    email (EmailStr): The user's email address, validated by `pydantic` to ensure it is in a valid format."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    },
    "tags": [
        {
            "name": "users",
            "description": "APIs for managing users, including creation and retrieval."
        },
        {
            "name": "studies",
            "description": "APIs for managing studies, including creation and retrieval."
        }
    ]
}